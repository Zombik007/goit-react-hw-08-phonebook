{"version":3,"sources":["views/contactsViews/ContactsViews.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/FilterContact/FilterContact.js","views/contactsViews/ContactsPageViews.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/FilterContact/FilterContact.module.css"],"names":["module","exports","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","state","contactsSelectors","getContacts","dispatch","useDispatch","inputChange","e","target","value","resetForm","className","styles","Form","onSubmit","preventDefault","isContactExist","items","find","contact","toast","error","theme","contactsOperations","addContacts","id","uuid","Group","controlId","Label","Control","type","placeholder","onChange","pattern","title","required","Button","button","variant","classMame","ContactList","isLoading","getVisibleContacts","useEffect","fetchContacts","list","map","ContactListItem","item","item_component","item_component_name","item_component_number","size","onClick","deleteContacts","Filter","getFilter","filter","filter_input","currentTarget","ContactsViews"],"mappings":"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","file":"static/js/ContactsViews.d75a99ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactsViews_title__3FnAV\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport { Button, Form } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { v4 as uuid } from 'uuid';\nimport styles from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(state => contactsSelectors.getContacts(state));\n  const dispatch = useDispatch();\n\n  const inputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    const isContactExist = !!contacts.items.find(\n      contact => contact.name === name,\n    );\n    isContactExist &&\n      toast.error('Contact is already exist', {\n        theme: 'colored',\n      });\n    return (\n      !isContactExist &&\n      dispatch(contactsOperations.addContacts({ id: uuid(), name, number })) &&\n      resetForm()\n    );\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={styles.contacts}>\n      <Form onSubmit={formSubmit}>\n        <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            value={name}\n            onChange={inputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example, Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Number</Form.Label>\n          <Form.Control\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            placeholder=\"Enter Number\"\n            onChange={inputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Form.Group>\n\n        <Button\n          className={styles.button}\n          variant=\"outline-primary\"\n          type=\"submit\"\n          classMame=\"ml-5\"\n        >\n          Add contact\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport { Button } from 'react-bootstrap';\nimport styles from './ContactList.module.css';\n\nexport default function ContactList() {\n  const { isLoading, error } = useSelector(state =>\n    contactsSelectors.getContacts(state),\n  );\n  const contacts = useSelector(state =>\n    contactsSelectors.getVisibleContacts(state),\n  );\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  if (contacts === []) return null;\n  if (isLoading) return <h2>Loading...</h2>;\n  if (error) return <h1>{error}</h1>;\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n}\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={styles.item}>\n      <span className={styles.item_component}>\n        <span className={styles.item_component_name}>{name}</span>{' '}\n        <span className={styles.item_component_number}>{number}</span>\n      </span>\n\n      <Button\n        size=\"sm\"\n        type=\"button\"\n        variant=\"outline-danger\"\n        className={styles.button}\n        onClick={() => dispatch(contactsOperations.deleteContacts(id))}\n      >\n        Delete\n      </Button>\n    </li>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, filter } from '../../redux/contacts';\nimport { Form } from 'react-bootstrap';\nimport styles from './FilterContact.module.css';\n\nexport default function Filter() {\n  const value = useSelector(state => contactsSelectors.getFilter(state));\n  const dispatch = useDispatch();\n  return (\n    <div className={styles.filter}>\n      <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\n        <Form.Label>Search</Form.Label>\n        <Form.Control\n          className={styles.filter_input}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={e => dispatch(filter(e.currentTarget.value))}\n          placeholder=\"Enter name for Search\"\n        />\n      </Form.Group>\n    </div>\n  );\n}\n","import ContactForm from '../../Components/ContactForm/ContactForm';\nimport ContactList from '../../Components/ContactList/ContactList';\nimport Filter from '../../Components/FilterContact/FilterContact';\nimport styles from './ContactsViews.module.css';\n\nexport default function ContactsViews() {\n  return (\n    <div>\n      <h2 className={styles.title}>Phonebook</h2>\n      <ContactForm />\n\n      <h2 className={styles.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactForm_contacts__2UwY0\",\"button\":\"ContactForm_button__3xzbo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__5waoG\",\"item\":\"ContactList_item__1afY-\",\"item_component\":\"ContactList_item_component__2Vp7_\",\"item_component_name\":\"ContactList_item_component_name__C9iXI\",\"item_component_number\":\"ContactList_item_component_number__2MsrX\",\"button\":\"ContactList_button__2BXHu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"FilterContact_filter__uwdq6\",\"filter_input\":\"FilterContact_filter_input__1KdYH\"};"],"sourceRoot":""}